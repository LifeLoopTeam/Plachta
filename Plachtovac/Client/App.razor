@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <CascadingBlazoredModal>
        <Router AppAssembly="@typeof(Program).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingBlazoredModal>
</CascadingAuthenticationState>

@code{

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (await LocalStorage.ContainKeyAsync("path"))
        {
            var path = await LocalStorage.GetItemAsync<string>("path");
            await LocalStorage.RemoveItemAsync("path");
            if (path.StartsWith(""))
            {
                NavigationManager.NavigateTo(path);
            }
        }
    }

}

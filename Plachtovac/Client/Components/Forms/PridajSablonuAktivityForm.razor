@using Blazorise
@using Plachtovac.Client.Helpers
@using Plachtovac.Shared.BO

<Validations Mode="ValidationMode.Auto" @ref="validations">
    <Field>
        <FieldLabel>Názov</FieldLabel>
        <Validation Validator="@ValidationRule.IsNotEmpty">
            <TextEdit @ref="NazovSablony" @bind-Text="@nazov" Placeholder="Názov aktivity">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Validation>
    </Field>

    <Field>
        <FieldLabel>Trvanie <span class="small">(v minutach)</span></FieldLabel>
        <Validation Validator="@ValidationRule.IsNotEmpty">
            <NumericEdit TValue="int" Value="@trvanieAktivity">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </NumericEdit>
        </Validation>
    </Field>
</Validations>

<VeduciAssignForm @ref="assignForm" Rozvrh="@Rozvrh" PriradenyVeduci="@Sablona.Veduci"></VeduciAssignForm>

<button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
<button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
@code {
    Validations validations;

    VeduciAssignForm assignForm;

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public Rozvrh Rozvrh { get; set; }

    [Parameter]
    public AktivitaSablona Sablona
    {
        get => _sablona;
        set
        {
            _sablona = value;
            nazov = _sablona?.Nazov;
            trvanieAktivity = (int) Sablona.Trvanie.TotalMinutes;
        }
    }

    private AktivitaSablona _sablona = new AktivitaSablona();

    private TextEdit NazovSablony;

    private string nazov;

    private int trvanieAktivity;


    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            NazovSablony.Focus(true);
        }
    }

    void SubmitForm()
    {
        if (validations.ValidateAll())
        {
            Sablona.Nazov = nazov;
            Sablona.Trvanie = TimeSpan.FromMinutes(trvanieAktivity);
            Sablona.Veduci.Clear();
            Sablona.Veduci.AddRange(assignForm.GetResult());

            BlazoredModal.Close(ModalResult.Ok(Sablona));
        }
    }

    void Cancel()
    {
        BlazoredModal.Cancel();
    }

}
